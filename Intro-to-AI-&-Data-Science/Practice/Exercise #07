import pandas as pd 
import numpy as np 
from sklearn.model_selection import train_test_split 
from sklearn.preprocessing import StandardScaler 
from sklearn.neural_network import MLPClassifier 
from sklearn.metrics import accuracy_score, confusion_matrix 
import matplotlib.pyplot as plt 
import seaborn as sns 
 
df = pd.read_csv("mushroom_cleaned.csv") 
df = df.drop(columns=['cap-shape', 'gill-attachment', 'gill-color', 'stem-color']) 
 
X = df.drop('class', axis=1) 
y = df['class'] 
 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, 
random_state=42) 
 
scaler = StandardScaler() 
X_train_scaled = scaler.fit_transform(X_train) 
X_test_scaled = scaler.transform(X_test) 
mlp_clf = MLPClassifier(hidden_layer_sizes=(10, 10, 10), activation='relu', 
random_state=42, verbose=True) 
mlp_clf.fit(X_train_scaled, y_train) 
y_pred = mlp_clf.predict(X_test_scaled) 
accuracy = accuracy_score(y_test, y_pred) 
print("Accuracy:", accuracy) 
Accuracy: 0.7718145646340335 
cm = confusion_matrix(y_test, y_pred) 
plt.figure(figsize=(8, 6)) 
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', cbar=False) 
plt.xlabel('Predicted labels') 
plt.ylabel('True labels') 
plt.title('Confusion Matrix') 
plt.show()
